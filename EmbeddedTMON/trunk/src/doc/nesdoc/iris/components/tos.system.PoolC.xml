<?xml version="1.0" ?><component abstract="" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc" nicename="tos.system.PoolC" qname="PoolC">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>
  A general dynamic memory pool component.</short>
        <long>
  A general dynamic memory pool component.

  @author Philip Levis
  @author Geoffrey Mainland
  @date   $Date: 2006-12-12 18:23:47 $
</long>
      </documentation>
      <parameters>
        <typedef loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc" name="pool_t" ref="0x2ace82deba08">
          <component-ref nicename="tos.system.PoolC" qname="PoolC"/>
          <type-var alignment="U:" size="U:"><typedef-ref name="pool_t" ref="0x2ace82deba08" scoped=""/></type-var>
        </typedef>
        <constant loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc" name="POOL_SIZE" ref="0x2ace82debd58">
          <component-ref nicename="tos.system.PoolC" qname="PoolC"/>
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
      <wiring>
        <wire loc="49:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
          <from><interface-ref name="Pool" ref="0x2ace82e43310" scoped=""/></from>
          <to><interface-ref name="Pool" ref="0x2ace82e3ee30" scoped=""/></to>
        </wire>
        <wire loc="48:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
          <from><interface-ref name="SoftwareInit" ref="0x2ace81c784c8" scoped=""/></from>
          <to><interface-ref name="Init" ref="0x2ace82e3e790" scoped=""/></to>
        </wire>
      </wiring>
    <specification><interface loc="42:/opt/tinyos-2.1.2/tos/system/PoolC.nc" name="Pool" provided="1" ref="0x2ace82e43310">
      <component-ref nicename="tos.system.PoolC" qname="PoolC"/>
      <type-interface alignment="I:1" size="I:2"><interface-ref name="Pool" ref="0x2ace82e43310" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.Pool" qname="Pool"/>
        <arguments>
          <type-var alignment="U:" size="U:"><typedef-ref name="pool_t" ref="0x2ace82deba08" scoped=""/></type-var>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" ref="0x2ace82e40280" scoped=""/>
        <function-ref name="maxSize" ref="0x2ace82e42728" scoped=""/>
        <function-ref name="empty" ref="0x2ace82e43e58" scoped=""/>
        <function-ref name="put" ref="0x2ace82e42b78" scoped=""/>
        <function-ref name="size" ref="0x2ace82e422d8" scoped=""/>
      </interface-functions>
    </interface></specification><referenced><interface loc="56:/opt/tinyos-2.1.2/tos/system/PoolP.nc" name="Pool" provided="1" ref="0x2ace82e3ee30">
      <component-ref nicename="tos.system.PoolP" qname="PoolC.PoolP"/>
      <type-interface alignment="I:1" size="I:2"><interface-ref name="Pool" ref="0x2ace82e3ee30" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.Pool" qname="Pool"/>
        <arguments>
          <type-var alignment="U:" size="U:"><typedef-ref name="pool_t" ref="0x2ace82deba08" scoped=""/></type-var>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" ref="0x2ace82e24dd0" scoped=""/>
        <function-ref name="maxSize" ref="0x2ace82e242d8" scoped=""/>
        <function-ref name="empty" ref="0x2ace82e3d9e0" scoped=""/>
        <function-ref name="put" ref="0x2ace82e24728" scoped=""/>
        <function-ref name="size" ref="0x2ace82e3de30" scoped=""/>
      </interface-functions>
    </interface><interface loc="55:/opt/tinyos-2.1.2/tos/system/PoolP.nc" name="Init" provided="1" ref="0x2ace82e3e790">
      <component-ref nicename="tos.system.PoolP" qname="PoolC.PoolP"/>
      <type-interface alignment="I:1" size="I:2"><interface-ref name="Init" ref="0x2ace82e3e790" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.Init" qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" ref="0x2ace82e3eae0" scoped=""/>
      </interface-functions>
    </interface><interface loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc" name="SoftwareInit" provided="0" ref="0x2ace81c784c8">
      <component-ref nicename="tos.system.MainC" qname="MainC"/>
      <type-interface alignment="I:1" size="I:2"><interface-ref name="SoftwareInit" ref="0x2ace81c784c8" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.Init" qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" ref="0x2ace81c78818" scoped=""/>
      </interface-functions>
    </interface><component abstract="" loc="53(PoolC.PoolP):/opt/tinyos-2.1.2/tos/system/PoolP.nc" nicename="tos.system.PoolP" qname="PoolC.PoolP">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>
  Implementation of a general dynamic memory pool component.</short>
        <long>
  Implementation of a general dynamic memory pool component.
  Note that the allocation/deallocation policies are 
  different than traditional dynamic allocators such as
  malloc or slab allocators. When initialized, the Pool
  contains &lt;code&gt;size&lt;/code&gt; items of type &lt;code&gt;pool_t&lt;/code&gt;.
  These elements can be removed from the pool for use with 
  &lt;code&gt;Pool.get&lt;/code&gt;, and new elements can be placed in
  the pool with &lt;code&gt;Pool.put&lt;/code&gt;. The pool allows 
  components to &lt;code&gt;put&lt;/code&gt; elements besides those which
  were obtained with &lt;code&gt;get&lt;/code&gt;. The pool can never have
  more than &lt;code&gt;size&lt;/code&gt; elements in it.

  @author Philip Levis
  @author Kyle Jamieson
  @author Geoffrey Mainland
  @date   $Date: 2010-01-20 19:59:07 $
</long>
      </documentation>
      <instance>
        <component-ref nicename="tos.system.PoolP" qname="PoolP"/>
        <arguments>
          <type-var alignment="U:" size="U:"><typedef-ref name="pool_t" ref="0x2ace82deba08" scoped=""/></type-var>
          <value cst="U:">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component><component loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc" nicename="tos.system.MainC" qname="MainC">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     
  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     
  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By
  downloading, copying, installing or using the software you agree to
  this license.  If you do not agree to this license, do not download,
  install, copy or use the software.

  Copyright (c) 2004-2005 Crossbow Technology, Inc.
  Copyright (c) 2002-2003 Intel Corporation.
  Copyright (c) 2000-2003 The Regents of the University  of California.    
  All rights reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:

 - Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.
 - Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the
   distribution.
 - Neither the name of the copyright holder nor the names of
   its contributors may be used to endorse or promote products derived
   from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
 THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 OF THE POSSIBILITY OF SUCH DAMAGE.

  @author Jason Hill, Philip Levis, Nelson Lee, David Gay
  @author Alan Broad &lt;abroad@xbow.com&gt;
  @author Matt Miller &lt;mmiller@xbow.com&gt;
  @author Martin Turon &lt;mturon@xbow.com&gt;

  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $
</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
          <from><interface-ref name="Boot" ref="0x2ace81c7b020" scoped=""/></from>
          <to><interface-ref name="Boot" ref="0x2ace81e24080" scoped=""/></to>
        </wire>
        <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
          <from><interface-ref name="Scheduler" ref="0x2ace81e246b8" scoped=""/></from>
          <to><interface-ref name="Scheduler" ref="0x2ace819db5c8" scoped=""/></to>
        </wire>
        <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
          <from><interface-ref name="PlatformInit" ref="0x2ace81e230e0" scoped=""/></from>
          <to><interface-ref name="Init" ref="0x2ace81c7abe8" scoped=""/></to>
        </wire>
        <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
          <from><interface-ref name="SoftwareInit" ref="0x2ace81e237a8" scoped=""/></from>
          <to><interface-ref name="SoftwareInit" ref="0x2ace81c784c8" scoped=""/></to>
        </wire>
      </wiring>
    </component></referenced></component>