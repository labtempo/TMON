<?xml version="1.0" ?><interfacedef loc="10:/opt/tinyos-2.1.2/tos/lib/net/Deluge/DelugeMetadata.nc" nicename="tos.lib.net.Deluge.DelugeMetadata" qname="DelugeMetadata">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/lib/net/Deluge/DelugeMetadata.nc">
        <short>
  An interface for obtaining the identification data of an
  image.</short>
        <long>
  An interface for obtaining the identification data of an
  image. The pointer returned by readDone will be destroyed by the
  next read.

  @author Razvan Musaloiu-E. &lt;razvanm@cs.jhu.edu&gt;
  @author Chieh-Jan Mike Liang &lt;cliang4@cs.jhu.edu&gt;
</long>
      </documentation>
      <function command="" loc="12:/opt/tinyos-2.1.2/tos/lib/net/Deluge/DelugeMetadata.nc" name="read" provided="0" ref="0x2ace83ca56a8">
        <interfacedef-ref nicename="tos.lib.net.Deluge.DelugeMetadata" qname="DelugeMetadata"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="error_t" ref="0x2ace819d7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="12:/opt/tinyos-2.1.2/tos/lib/net/Deluge/DelugeMetadata.nc" name="imgNum" ref="0x2ace83ca5438">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" loc="13:/opt/tinyos-2.1.2/tos/lib/net/Deluge/DelugeMetadata.nc" name="readDone" provided="0" ref="0x2ace83ca4680">
        <interfacedef-ref nicename="tos.lib.net.Deluge.DelugeMetadata" qname="DelugeMetadata"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
            </type-int>
            <type-pointer alignment="I:1" size="I:2">
              <type-tag alignment="I:1" size="I:84"><nx_struct-ref name="DelugeIdent" ref="0x2ace837c2638"/>
                <typename><typedef-ref name="DelugeIdent" ref="0x2ace837beae8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="error_t" ref="0x2ace819d7ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="13:/opt/tinyos-2.1.2/tos/lib/net/Deluge/DelugeMetadata.nc" name="imgNum" ref="0x2ace83ca5d08">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
            </type-int>
          </variable>
          <variable loc="13:/opt/tinyos-2.1.2/tos/lib/net/Deluge/DelugeMetadata.nc" name="ident" ref="0x2ace83ca40c8">
            <type-pointer alignment="I:1" size="I:2">
              <type-tag alignment="I:1" size="I:84"><nx_struct-ref name="DelugeIdent" ref="0x2ace837c2638"/>
                <typename><typedef-ref name="DelugeIdent" ref="0x2ace837beae8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable loc="13:/opt/tinyos-2.1.2/tos/lib/net/Deluge/DelugeMetadata.nc" name="error" ref="0x2ace83ca43f0">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="error_t" ref="0x2ace819d7ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>