<?xml version="1.0" ?><interfacedef loc="23:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" nicename="tos.chips.at45db.HplAt45db" qname="HplAt45db">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <short>
 HPL for Atmel's AT45DB family of serial dataflash chips.</short>
        <long>
 HPL for Atmel's AT45DB family of serial dataflash chips. 
 Provides access to all basic AT45DB operations plus operations to 
 wait for the flash to go idle or finish a comparison. See the AT45DB
 family datasheets for full details on these operations.
 &lt;p&gt;
 This interface only supports one operation at a time.

 @author David Gay
</long>
      </documentation>
      <function event="" loc="141:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="readDone" provided="0" ref="0x2ace83aa0b98">
        <documentation loc="137:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>
 Signaled when data has been read from the buffer.</short>
          <long>
 Signaled when data has been read from the buffer. The data buffer
 is &quot;returned&quot;.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.at45db.HplAt45db" qname="HplAt45db"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="41:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="waitCompare" provided="0" ref="0x2ace83aadc48">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>
 Wait for a buffer-flash comparison to complete.</short>
          <long>
 Wait for a buffer-flash comparison to complete. waitCompareDone will
 be signaled when that occurs.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.at45db.HplAt45db" qname="HplAt45db"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" loc="163:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="crcDone" provided="0" ref="0x2ace83a9c020">
        <documentation loc="159:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>
 Signaled when CRC has been computed.</short>
          <long>
 Signaled when CRC has been computed.
 @param computedCrc CRC value
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.at45db.HplAt45db" qname="HplAt45db"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="uint16_t" ref="0x2ace810e0b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="163:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="computedCrc" ref="0x2ace83a9ec70">
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="uint16_t" ref="0x2ace810e0b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" loc="79:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="flushDone" provided="0" ref="0x2ace83aa80d8">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>
 Signaled when flush command sent (use waitIdle to detect when
 flush command completes)
</short>
        </documentation>
        <interfacedef-ref nicename="tos.chips.at45db.HplAt45db" qname="HplAt45db"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="134:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="read" provided="0" ref="0x2ace83aa02d0">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>
 Read directly from flash.</short>
          <long>
 Read directly from flash. readDone will be signaled.
 @param cmd AT45_C_READ_CONTINUOUS or AT45_C_READ_PAGE. When the end of
   a page is read, AT45_C_READ_CONTINUOUS continues on the next page,
   while AT45_C_READ_PAGE continues at the start of the same page.
 @param page Page to read from
 @param offset Offset in page at which to start reading - must be between
   0 and AT45_PAGE_SIZE - 1 
 @param data Buffer in which to place read data. The buffer is &quot;returned&quot;
   at readDone time.
 @param n Number of bytes to read (&gt; 0).
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.at45db.HplAt45db" qname="HplAt45db"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
            </type-int>
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45page_t" ref="0x2ace8381b790"/></typename>
            </type-int>
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2ace8381bb90"/></typename>
            </type-int>
            <type-pointer alignment="I:1" size="I:2">
              <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
                <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2ace8381bb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="134:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="cmd" ref="0x2ace83aa2bd0">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
            </type-int>
          </variable>
          <variable loc="134:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="page" ref="0x2ace83aa1020">
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45page_t" ref="0x2ace8381b790"/></typename>
            </type-int>
          </variable>
          <variable loc="134:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="offset" ref="0x2ace83aa13b0">
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2ace8381bb90"/></typename>
            </type-int>
          </variable>
          <variable loc="135:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="data" ref="0x2ace83aa1ba8">
            <type-pointer alignment="I:1" size="I:2">
              <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
                <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable loc="135:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="n" ref="0x2ace83aa0020">
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2ace8381bb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" loc="100:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="erase" provided="0" ref="0x2ace83aa52a0">
        <documentation loc="95:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>
 Erase a flash page.</short>
          <long>
 Erase a flash page. eraseDone will be signaled.
 @param cmd must be AT45_C_ERASE_PAGE
 @param page Page to compare with (must be less than AT45_MAX_PAGES)
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.at45db.HplAt45db" qname="HplAt45db"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
            </type-int>
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45page_t" ref="0x2ace8381b790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="100:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="cmd" ref="0x2ace83aa6c08">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
            </type-int>
          </variable>
          <variable loc="100:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="page" ref="0x2ace83aa5020">
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45page_t" ref="0x2ace8381b790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" loc="185:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="writeDone" provided="0" ref="0x2ace83b28788">
        <documentation loc="181:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>
 Signaled when data has been written to the buffer.</short>
          <long>
 Signaled when data has been written to the buffer. The data buffer
 is &quot;returned&quot;.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.at45db.HplAt45db" qname="HplAt45db"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" loc="35:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="waitIdleDone" provided="0" ref="0x2ace83aad550">
        <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>
 Signaled when the flash is idle.</short>
          <long>
 Signaled when the flash is idle.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.at45db.HplAt45db" qname="HplAt45db"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" loc="47:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="waitCompareDone" provided="0" ref="0x2ace83aab648">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>
 Signaled when the buffer-flash comparison is complete.</short>
          <long>
 Signaled when the buffer-flash comparison is complete.
 @param compareOk TRUE if the comparison succeeded, FALSE otherwise.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.at45db.HplAt45db" qname="HplAt45db"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="bool" ref="0x2ace819b29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="47:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="compareOk" ref="0x2ace83aab3d8">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="bool" ref="0x2ace819b29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" loc="106:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="eraseDone" provided="0" ref="0x2ace83aa59f0">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>
 Signaled when erase command sent (use waitIdle to detect when
 erase command completes)
</short>
        </documentation>
        <interfacedef-ref nicename="tos.chips.at45db.HplAt45db" qname="HplAt45db"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="30:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="waitIdle" provided="0" ref="0x2ace83ab0d18">
        <documentation loc="24:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>
 Wait for a &quot;Group A&quot; operation to complete (essentially all non-buffer
 operations).</short>
          <long>
 Wait for a &quot;Group A&quot; operation to complete (essentially all non-buffer
 operations). You should use waitComapre if you are waiting for a
 comparison to complete. waitIdleDone will be signaled when the operation
 is complete.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.at45db.HplAt45db" qname="HplAt45db"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="73:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="flush" provided="0" ref="0x2ace83aa97e8">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>
 Write a buffer to a flash page.</short>
          <long>
 Write a buffer to a flash page. flushDone will be signaled.
 @param cmd AT45_C_FLUSH_BUFFER1 to write buffer 1 to flash,
   AT45_C_FLUSH_BUFFER2 to write buffer 2 to flash,
   AT45_C_QFLUSH_BUFFER1 to write buffer 1 to flash w/o erase
   (page must have been previously erased),
   AT45_C_QFLUSH_BUFFER2 to write buffer 2 to flash w/o erase
   (page must have been previously erased),
 @param page Page to write (must be less than AT45_MAX_PAGES)
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.at45db.HplAt45db" qname="HplAt45db"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
            </type-int>
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45page_t" ref="0x2ace8381b790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="73:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="cmd" ref="0x2ace83aa9228">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
            </type-int>
          </variable>
          <variable loc="73:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="page" ref="0x2ace83aa9568">
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45page_t" ref="0x2ace8381b790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" loc="178:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="write" provided="0" ref="0x2ace83a9bc00">
        <documentation loc="165:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>
 Write some data to a flash buffer, and optionally the flash itself.</short>
          <long>
 Write some data to a flash buffer, and optionally the flash itself. 
 writeDone will be signaled.
 @param cmd One of AT45_C_WRITE_BUFFER1/2 or AT45_C_WRITE_MEM_BUFFER1/2
   to write respectively to buffer 1/2, or to buffer 1/2 and the 
   specified main memory page.
 @param page Page to write when cmd is AT45_C_WRITE_MEM_BUFFER1/2
 @param offset Offset in page at which to start writing - must be between
   0 and AT45_PAGE_SIZE - 1 
 @param data Data to write. The buffer is &quot;returned&quot; at writeDone time.
 @param n Number of bytes to write (&gt; 0). offset + n must be &lt;= 
   AT45_PAGE_SIZE
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.at45db.HplAt45db" qname="HplAt45db"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
            </type-int>
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45page_t" ref="0x2ace8381b790"/></typename>
            </type-int>
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2ace8381bb90"/></typename>
            </type-int>
            <type-pointer alignment="I:1" size="I:2">
              <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
                <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2ace8381bb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="178:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="cmd" ref="0x2ace83a9c6d0">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
            </type-int>
          </variable>
          <variable loc="178:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="page" ref="0x2ace83a9ca10">
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45page_t" ref="0x2ace8381b790"/></typename>
            </type-int>
          </variable>
          <variable loc="178:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="offset" ref="0x2ace83a9cda0">
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2ace8381bb90"/></typename>
            </type-int>
          </variable>
          <variable loc="179:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="data" ref="0x2ace83a9b5f0">
            <type-pointer alignment="I:1" size="I:2">
              <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
                <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable loc="179:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="n" ref="0x2ace83a9b950">
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2ace8381bb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" loc="93:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="compareDone" provided="0" ref="0x2ace83aa6540">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>
 Signaled when compare command sent (use waitCompare to detect when
 compare command completes and find out comparison result)
</short>
        </documentation>
        <interfacedef-ref nicename="tos.chips.at45db.HplAt45db" qname="HplAt45db"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="87:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="compare" provided="0" ref="0x2ace83aa8d48">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>
 Compare a page from flash with a buffer.</short>
          <long>
 Compare a page from flash with a buffer. compareDone will be signaled.
 @param cmd AT45_C_COMPARE_BUFFER1 to compare buffer 1, 
   AT45_C_COMPARE_BUFFER2 to compare buffer 2
 @param page Page to compare with (must be less than AT45_MAX_PAGES)
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.at45db.HplAt45db" qname="HplAt45db"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
            </type-int>
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45page_t" ref="0x2ace8381b790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="87:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="cmd" ref="0x2ace83aa8788">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
            </type-int>
          </variable>
          <variable loc="87:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="page" ref="0x2ace83aa8ac8">
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45page_t" ref="0x2ace8381b790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" loc="157:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="crc" provided="0" ref="0x2ace83a9e310">
        <documentation loc="143:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>
 Compute CRC of data in a flash buffer (using the CRC function from crc.h).</short>
          <long>
 Compute CRC of data in a flash buffer (using the CRC function from crc.h).
 crcDone will be signaled.
 @param cmd AT45_C_READ_BUFFER1 to compute CRC from buffer 1,
   AT45_C_READ_BUFFER2 to compute CRC from buffer 2
 @param page ignored (reserved for future use)
 @param offset Offset in page at which to start reading - must be between
   0 and AT45_PAGE_SIZE - 1 
 @param n Number of bytes to read (&gt; 0). offset + n must be &lt;= 
   AT45_PAGE_SIZE
 @param baseCrc initial CRC value - use 0 if computing a &quot;standalone&quot;
   CRC, or a previous crc result if computing a CRC over several
   flash pages
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.at45db.HplAt45db" qname="HplAt45db"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
            </type-int>
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45page_t" ref="0x2ace8381b790"/></typename>
            </type-int>
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2ace8381bb90"/></typename>
            </type-int>
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2ace8381bb90"/></typename>
            </type-int>
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="uint16_t" ref="0x2ace810e0b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="157:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="cmd" ref="0x2ace83a9f278">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
            </type-int>
          </variable>
          <variable loc="157:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="page" ref="0x2ace83a9f5b8">
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45page_t" ref="0x2ace8381b790"/></typename>
            </type-int>
          </variable>
          <variable loc="157:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="offset" ref="0x2ace83a9f948">
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2ace8381bb90"/></typename>
            </type-int>
          </variable>
          <variable loc="158:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="n" ref="0x2ace83a9fcc8">
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2ace8381bb90"/></typename>
            </type-int>
          </variable>
          <variable loc="158:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="baseCrc" ref="0x2ace83a9e060">
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="uint16_t" ref="0x2ace810e0b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" loc="119:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="readBuffer" provided="0" ref="0x2ace83aa22c0">
        <documentation loc="108:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>
 Read from a flash buffer.</short>
          <long>
 Read from a flash buffer. readDone will be signaled.
 @param cmd AT45_C_READ_BUFFER1 to read from buffer 1,
   AT45_C_READ_BUFFER2 to read from buffer 2
 @param offset Offset in page at which to start reading - must be between
   0 and AT45_PAGE_SIZE - 1 
 @param data Buffer in which to place read data. The buffer is &quot;returned&quot;
   at readDone time.
 @param n Number of bytes to read (&gt; 0). offset + n must be &lt;= 
   AT45_PAGE_SIZE
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.at45db.HplAt45db" qname="HplAt45db"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
            </type-int>
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2ace8381bb90"/></typename>
            </type-int>
            <type-pointer alignment="I:1" size="I:2">
              <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
                <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="uint16_t" ref="0x2ace810e0b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="119:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="cmd" ref="0x2ace83aa4108">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
            </type-int>
          </variable>
          <variable loc="119:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="offset" ref="0x2ace83aa4498">
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x2ace8381bb90"/></typename>
            </type-int>
          </variable>
          <variable loc="120:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="data" ref="0x2ace83aa4c90">
            <type-pointer alignment="I:1" size="I:2">
              <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
                <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable loc="120:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="n" ref="0x2ace83aa2020">
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="uint16_t" ref="0x2ace810e0b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" loc="61:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="fillDone" provided="0" ref="0x2ace83aaaae8">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>
 Signaled when fill command sent (use waitIdle to detect when
 fill command completes)
</short>
        </documentation>
        <interfacedef-ref nicename="tos.chips.at45db.HplAt45db" qname="HplAt45db"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="55:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="fill" provided="0" ref="0x2ace83aaa348">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>
 Read a page from flash into a buffer.</short>
          <long>
 Read a page from flash into a buffer. fillDone will be signaled.
 @param cmd AT45_C_FILL_BUFFER1 to read into buffer 1, 
   AT45_C_FILL_BUFFER2 to read into buffer 2
 @param page Page to read (must be less than AT45_MAX_PAGES)
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.at45db.HplAt45db" qname="HplAt45db"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
            </type-int>
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45page_t" ref="0x2ace8381b790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="55:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="cmd" ref="0x2ace83aabd40">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2ace810e0160"/></typename>
            </type-int>
          </variable>
          <variable loc="55:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc" name="page" ref="0x2ace83aaa0c8">
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="at45page_t" ref="0x2ace8381b790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>